// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using isgasoir;

#nullable disable

namespace isgasoir.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("ModuleStudant", b =>
                {
                    b.Property<long>("ModulesId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudantsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ModulesId", "StudantsId");

                    b.HasIndex("StudantsId");

                    b.ToTable("ModuleStudant");
                });

            modelBuilder.Entity("isgasoir.Activity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChapitreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChapitreId");

                    b.ToTable("activities");
                });

            modelBuilder.Entity("isgasoir.Chapitre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Duree")
                        .HasColumnType("REAL");

                    b.Property<long>("ModuleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("chapitres");
                });

            modelBuilder.Entity("isgasoir.Filiere", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("filieres");
                });

            modelBuilder.Entity("isgasoir.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Coiff")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("SemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SemId");

                    b.ToTable("modules");
                });

            modelBuilder.Entity("isgasoir.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Desg")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Pu")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Qte")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("isgasoir.Semestre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("FiliereId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.ToTable("semestrees");
                });

            modelBuilder.Entity("isgasoir.Studant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("studants");
                });

            modelBuilder.Entity("ModuleStudant", b =>
                {
                    b.HasOne("isgasoir.Module", null)
                        .WithMany()
                        .HasForeignKey("ModulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("isgasoir.Studant", null)
                        .WithMany()
                        .HasForeignKey("StudantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("isgasoir.Activity", b =>
                {
                    b.HasOne("isgasoir.Chapitre", "Chapitre")
                        .WithMany("Activities")
                        .HasForeignKey("ChapitreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapitre");
                });

            modelBuilder.Entity("isgasoir.Chapitre", b =>
                {
                    b.HasOne("isgasoir.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("isgasoir.Module", b =>
                {
                    b.HasOne("isgasoir.Semestre", "Sem")
                        .WithMany("Modules")
                        .HasForeignKey("SemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sem");
                });

            modelBuilder.Entity("isgasoir.Semestre", b =>
                {
                    b.HasOne("isgasoir.Filiere", null)
                        .WithMany("Semestres")
                        .HasForeignKey("FiliereId");
                });

            modelBuilder.Entity("isgasoir.Chapitre", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("isgasoir.Filiere", b =>
                {
                    b.Navigation("Semestres");
                });

            modelBuilder.Entity("isgasoir.Semestre", b =>
                {
                    b.Navigation("Modules");
                });
#pragma warning restore 612, 618
        }
    }
}
